description: Analyze code statically using stylelint
parameters:
  starting-points:
    description: Specify the path of starting to search for files to analyze (Multiple paths can be specified by separating them with line feed)
    type: string
    default: "**/*.{css,less,sass,scss,sss}"
  analysis-arguments:
    description: Arguments of analysis command
    type: string
    default: ""
  no-analysis-output-timeout:
    description: Elapsed time the command can run without output. The string is a decimal with unit suffix, such as “20m”, “1.25h”, “5s”
    type: string
    default: 10m
  prepare:
    description: Specify the required steps before analysis if necessary
    type: steps
    default:
      - install-analyzer
  redirecting-output:
    description: Specify "/dev/null" if you do not want to display the analysis results on the standard output
    type: enum
    enum: ["/dev/stdout", "/dev/stderr", "/dev/null"]
    default: "/dev/null"
steps:
  - dscar/analyze:
      step-name: Analyze code statically using stylelint
      prepare:
        - run: sudo apt-get install jq
        - run:
            name: export TRANSFORMATION_ARGUMENTS
            command: |
              set -x
              cat \<<-EOT >> $BASH_ENV
              export TRANSFORMATION_ARGUMENTS=(
                -rM
                'map((@html "<file name=\"\(.source)\">")+"\(.warnings|map(@html "<error source=\"\(.rule)\" severity=\"\(.severity)\" message=\"\(.text)\" line=\"(.line)\" column=\"\(.column)\" />")|join(""))</file>") | "<checkstyle>\(join(""))</checkstyle>"'
              )
              EOT
        - steps: << parameters.prepare >>
      analysis-command: npx
      analysis-arguments: stylelint << parameters.analysis-arguments >> --formatter=json --no-color --allow-empty-input
      transformation-command: jq
      starting-points: << parameters.starting-points >>
      no-output-timeout: << parameters.no-analysis-output-timeout >>
      redirecting-output: << parameters.redirecting-output >>
